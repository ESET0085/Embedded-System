#include <stdio.h>   // Standard input/output library (for printf)

// Assuming a microcontroller environment where GPIO is configured for LED
// For a real embedded system, these would be register accesses
#define LED_PIN 5    // Example LED pin number

// Function to simulate a delay (blocking delay)
void delay_ms(int ms) {
    volatile long i, j;  // Use volatile to prevent optimization
    
    for(i = 0; i < ms; i++) {
        for(j = 0; j < 10000; j++) {
            // Do nothing, just waste time
        }
    }
}

int main() {
    int counter = 0;       // Initialize counter variable
    int max_blinks = 5;    // Maximum number of blinks
    int threshold = 3;     // Threshold for conditional check

    // Loop to blink the LED
    for(counter = 0; counter < max_blinks; counter++) {

        // Conditional statement (if-else)
        if(counter < threshold) {
            // Simulate turning LED ON
            printf("LED ON (Counter: %d)\n", counter);
            delay_ms(200);   // Delay for 200 ms

            // Simulate turning LED OFF
            printf("LED OFF (Counter: %d)\n", counter);
            delay_ms(200);   // Delay for 200 ms
        } 
        else {
            // If the counter is at or above the threshold
            printf("Counter reached threshold or above: %d\n", counter);
            delay_ms(500);   // Longer delay
        }
    }

    // After blinking sequence
    printf("Blinking sequence completed.\n");

    // Example of a while loop
    int countdown = 3;
    while(countdown > 0) {
        printf("Countdown: %d\n", countdown);
        delay_ms(300);
        countdown--;   // Decrement operator
    }
    
    printf("Liftoff!\n");

    return 0;   // Indicate successful execution
}
